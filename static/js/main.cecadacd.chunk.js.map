{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","components/test/Test.js","components/pages/NotFound.js","context.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/contacts/Contact.js","components/contacts/Contacts.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","href","branding","react_router_dom","to","defaultProps","About","Test","fetch","then","response","json","console","log","Component","NotFound","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Consumer","TextInputGroup","_ref","label","name","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","email","phone","errors","onSubmit","e","preventDefault","_this$state","newContact","post","history","push","Phone","defineProperty","target","_this2","_this$state2","bind","layout_TextInputGroup","EditContact","updContact","abrupt","match","params","put","Contact","showContactInfo","onDeleteClick","delete","_this$props$contact","onClick","style","cursor","float","color","marginRight","Contacts","deleteContact","newContacts","Fragment","contacts_Contact","deleteClickHandler","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cecadacd.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Header = props => {\n  return (\n    <nav className='navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-0'>\n      <div className='container'>\n        <a href='/' className='navbar-brand'>\n          {props.branding}\n        </a>\n        <div>\n          <ul className='navbar-nav mr-auto'>\n            <li className='nav-item'>\n              <Link to='/' className='nav-link'>\n                <i className='fas fa-home' /> Home\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link to='/contact/add' className='nav-link'>\n                <i className='fas fa-plus' /> Add\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link to='/about' className='nav-link'>\n                <i className='fas fa-question' /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\n//default prop, if no props passed to component\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\n//prop types\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className='display-4'>About Contact Manager</h1>\n      <p className='lead'>app to manage contacts</p>\n      <p className='text-secondary'>v1.0.0</p>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\n      .then(response => response.json())\n      .then(json => console.log(json));\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Test Component</h1>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className='display-4'>\n        404 <br />\n        Page Not Found\n      </h1>\n      <p>Sorry, that page does not exist.</p>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  //axios way\n  // componentDidMount() {\n  //   axios\n  //     .get(\"https://jsonplaceholder.typicode.com/users\")\n  //     .then(response => this.setState({ contacts: response.data }));\n  // }\n\n  //async/await\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className='form-group'>\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {/* 'error && something is like 'if error, then' in JSX */}\n      {error && <div className='invalid-feedback'>{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onSubmit = (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    //inputChecks\n    if (name === \"\") {\n      this.setState({\n        errors: {\n          name: \"Name is required\"\n        }\n      });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({\n        errors: {\n          email: \"email is required\"\n        }\n      });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({\n        errors: {\n          Phone: \"Phone is required\"\n        }\n      });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    axios\n      .post(`https://jsonplaceholder.typicode.com/users`, newContact)\n      .then(res => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\n\n    //Clear\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    //redirect\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className='card mb-3'>\n              <div className='card-header'>\n                <h1>Add contact</h1>\n              </div>\n              <div className='card-body'>\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label='Name'\n                    name='name'\n                    placeholder='Enter Name'\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup\n                    label='Email'\n                    name='email'\n                    type='email'\n                    placeholder='Enter email...'\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    label='Phone'\n                    name='phone'\n                    placeholder='Enter phone...'\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type='submit'\n                    value='Add Contact'\n                    className='btn btn-light btn-block'\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    //inputChecks\n    if (name === \"\") {\n      this.setState({\n        errors: {\n          name: \"Name is required\"\n        }\n      });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({\n        errors: {\n          email: \"email is required\"\n        }\n      });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({\n        errors: {\n          Phone: \"Phone is required\"\n        }\n      });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    //Clear\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    //redirect\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className='card mb-3'>\n              <div className='card-header'>\n                <h1>Edit contact</h1>\n              </div>\n              <div className='card-body'>\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label='Name'\n                    name='name'\n                    placeholder='Enter Name'\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup\n                    label='Email'\n                    name='email'\n                    type='email'\n                    placeholder='Enter email...'\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    label='Phone'\n                    name='phone'\n                    placeholder='Enter phone...'\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type='submit'\n                    value='Update Contact'\n                    className='btn btn-light btn-block'\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { Consumer } from \"../../context\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  // onShowClick = target => {\n  //   this.setState({\n  //     showContactInfo: !this.state.showContactInfo\n  //   });\n  // };\n\n  //axios\n  // onDeleteClick = (id, dispatch) => {\n  //   axios\n  //     .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n  //     .then(res => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\n  // };\n  //async\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n\n  render() {\n    //destructuring\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className='card card-body mb-3'>\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={() => {\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    });\n                  }}\n                  className='fas fa-sort-down'\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className='fas fa-times'\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className='fas fa-pencil-alt'\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className='list-group'>\n                  <li className='list-group-item'>{email}</li>\n                  <li className='list-group-item'>{phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  deleteClickHandler: PropTypes.func.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\n\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  deleteContact = id => {\n    const { contacts } = this.state;\n\n    const newContacts = contacts.filter(contact => contact.id !== id);\n\n    this.setState({\n      contacts: newContacts\n    });\n  };\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <>\n              <h1 className='display-4 mb-2'>\n                <span className='text-danger'>Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact\n                  key={contact.id}\n                  contact={contact}\n                  deleteClickHandler={this.deleteContact.bind(this, contact.id)}\n                />\n              ))}\n            </>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport Test from \"./components/test/Test\";\nimport NotFound from \"./components/pages/NotFound\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nimport Contacts from \"./components/contacts/Contacts\";\n\nimport { Provider } from \"./context\";\n\nimport \"./bootstrap.min.css\";\nimport \"./App.scss\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className='App'>\n            <Header branding='Contact manager' />\n            <div className='container'>\n              <Switch>\n                <Route exact path='/' component={Contacts} />\n                <Route exact path='/contact/add' component={AddContact} />\n                <Route exact path='/contact/edit/:id' component={EditContact} />\n                <Route exact path='/about' component={About} />\n                <Route exact path='/test' component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}